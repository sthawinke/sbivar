% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitLinModels.R, R/extractResultsMulti.R
\name{fitLinModels}
\alias{fitLinModels}
\alias{extractResultsMulti}
\title{Fit linear models on measures calculated for replicated images, and extract the results}
\usage{
fitLinModels(
  result,
  design,
  Formula,
  Control = lmerControl(check.conv.grad = .makeCC("ignore", tol = 0.002, relTol = NULL),
    check.conv.singular = .makeCC(action = "ignore", tol = formals(isSingular)$tol),
    check.conv.hess = .makeCC(action = "ignore", tol = 1e-06))
)

extractResultsMulti(result, design, method = "BH")
}
\arguments{
\item{design}{A design dataframe}

\item{Formula}{A formula for the linear model to be fitted, can contain random effects.}

\item{Control}{A control list for lmerTest::lmer}

\item{method}{Multiplicity correction method passed onto p.adjust}

\item{measures}{A list of measures of bivariate spatial association}

\item{models}{The fitted linear models}
}
\value{
For fitLinModels(), a list of linear models

For extractResultsMulti() a list of matrices, all containing estimate, standard error,
p-value and adjusted p-value
}
\description{
Given measures estimated from replicated images using \link{sbivarMulti},
fit linear models to determine significance.
To maintain interpretability of the intercept, continuous fixed effect variables are centered,
and sum coding is used for the categorical ones.

extractResultsMulti() returns the results as matrix, including adjusted p-values, and sorted by p-value.
}
\details{
The left hand side of "Formula" can be provided or not,
but it will be overridden by "out" for downstream analysis
}
\examples{
example(sbivarMulti, "sbivar")
toyDesign = data.frame("covariate" = rnorm(ims),
"cofactor" = factor(rep(c(TRUE, FALSE), length.out = ims)),
 "group" = rep(c("control", "treatment"), length.out = ims))
multiFitGams = fitLinModels(estGAMs, design = toyDesign,
Formula =  ~ covariate + cofactor + (1|group))
multiFitMoran = fitLinModels(estMoran, design = toyDesign,
Formula =  ~ covariate + cofactor)
multiFit = fitLinModels(estCorrelations, design = toyDesign, Formula =
 ~ covariate + (1|group))
#Extract the results
resGams = extractResultsMulti(multiFitGams, design = toyDesign)
head(resGams$Intercept)
}
\seealso{
\link[lmerTest]{lmer}, \link[stats]{lm}, \link[sbivar]{sbivarMulti}, \link[stats]{p.adjust}
}
